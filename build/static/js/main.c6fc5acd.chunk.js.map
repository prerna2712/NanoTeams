{"version":3,"sources":["routes/CreateRoom.js","routes/Icons/index.js","routes/Room.js","App.js","serviceWorker.js","index.js"],"names":["CreateRoom","props","id","type","bg","color","className","bottom","onClick","uuid","history","push","library","add","faMicrophone","faMicrophoneSlash","faEye","faPhoneSlash","faEyeSlash","faPhoneVolume","faCommentAlt","faPaperPlane","faClipboard","Container","styled","div","Video","video","Message","MessageBox","textarea","MyMessage","MyRow","PartnerRow","PartnerMessage","Room","UserVideo","PartnerVideo","useState","isMuted","setMuted","isPlaying","setPlaying","stream","setStream","chatShow","setChatShow","text","setText","message","setMessage","userVideo","useRef","partnerVideo","peerRef","socket","otherUser","userStream","sendChannel","handleReceiveMessage","e","yours","value","data","createPeer","userID","peer","RTCPeerConnection","iceServers","urls","onicecandidate","handleICECandidateEvent","ontrack","handleTrackEvent","onnegotiationneeded","current","createOffer","then","offer","setLocalDescription","payload","target","caller","sdp","localDescription","emit","catch","console","log","handleNegotiationNeededEvent","candidate","handleNewICECandidateMsg","incoming","RTCIceCandidate","addIceCandidate","handleRecieveCall","ondatachannel","event","channel","onmessage","desc","RTCSessionDescription","setRemoteDescription","getTracks","forEach","track","addTrack","createAnswer","answer","handleAnswer","srcObject","streams","useEffect","navigator","mediaDevices","getUserMedia","audio","muted","io","connect","match","params","roomID","on","createDataChannel","callUser","playsInline","ref","autoPlay","copy","window","location","href","icon","getAudioTracks","enabled","getVideoTracks","destroy","replace","map","index","scrollTo","key","onChange","placeholder","send","App","path","exact","component","Boolean","hostname","ReactDOM","render","StrictMode","document","getElementById","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.c6fc5acd.chunk.js","sourcesContent":["import React from \"react\";\nimport { v1 as uuid } from \"uuid\";\nimport ParticlesBg from \"particles-bg\";\nimport Fade from \"react-reveal\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './Icons/App.scss';\n\nconst CreateRoom = (props) => {\n    function create() {\n        const id = uuid();\n        props.history.push(`/room/${id}`);\n    }\n\n    return (\n            <header id=\"home\">\n                <ParticlesBg type=\"circle\" bg={true} color={\"random\"} />\n                <div className=\"banner\">\n                    <div className=\"col\">\n                        <Fade bottom>\n                            <h1 className=\"responsive-headline\">Nano-Teams</h1>\n                            <h3>A video calling app. Create a room and share the link with your friend and connect realtime.</h3>\n                            <br />\n                            <button className=\"button\" onClick={create}>Create Room</button>\n                        </Fade>\n                    </div>\n                </div>\n            </header>\n    );\n}\n\nexport default CreateRoom;","import { library } from '@fortawesome/fontawesome-svg-core'\nimport { faMicrophone, faMicrophoneSlash, faEye, faPhoneSlash, faEyeSlash, faPhoneVolume, faCommentAlt, faPaperPlane, faClipboard } from '@fortawesome/free-solid-svg-icons'\n\nlibrary.add( faMicrophone, faMicrophoneSlash, faEye, faPhoneSlash, faEyeSlash, faPhoneVolume, faCommentAlt, faPaperPlane, faClipboard )","import React, { useRef, useEffect, useState } from \"react\";\nimport './Icons';\nimport io from \"socket.io-client\";\nimport styled from \"styled-components\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport copy from 'copy-to-clipboard';\n\nconst Container = styled.div`\n  position: fixed;\n  background: #000000;\n  width: 100vw;\n  height: 93vh;\n`;\n\nconst Video = styled.video`\n  border-radius: 10px;\n  width: 100%;\n  overflow: hidden;\n  background: #000000;\n`;\n\n//added for msg\nconst Message = styled.div`\n    // border: 1px solid black;\n    margin-top: 10px;\n`;\n\nconst MessageBox = styled.textarea`\n    backgroud-color: white;\n    width: 20vw;\n    height: 100%;\n`;\n\nconst MyMessage = styled.div`\n  background-color: #ADB5BD;\n  border-radius: 10px; \n  color: black;\n  border: 1px solid lightgray;\n  padding: 10px;\n  margin-right: 5px;\n  text-align: center;\n`;\n\nconst MyRow = styled.div`\n  backgroud-color: white;\n  display: flex;\n  justify-content: flex-end;\n  margin-top: 10px;\n  overflow: hidden;\n`;\n\nconst PartnerRow = styled(MyRow)`\n  justify-content: flex-start;\n`;\n\nconst PartnerMessage = styled.div`\n  background-color: black;\n  color: white;\n  border-radius: 10px; \n  border: 1px solid lightgray;\n  padding: 10px;\n  margin-left: 5px;\n  text-align: center;\n`;\n\nconst Room = (props) => {\n    const [isMuted, setMuted] = useState(false);\n    const [isPlaying, setPlaying] = useState(true);\n    const [stream, setStream] = useState();\n    const [chatShow, setChatShow] = useState(false);\n    const [text, setText] = useState(\"\");\n    const [message, setMessage] = useState([]);\n\n    const userVideo = useRef();\n    const partnerVideo = useRef();\n    const peerRef = useRef();\n    const socket = useRef();\n    const otherUser = useRef();\n    const userStream = useRef();\n    const sendChannel = useRef();\n\n\n    useEffect(() => {\n        navigator.mediaDevices.getUserMedia({ audio: true, video: true }).then(stream => {\n            setStream(stream);\n            userVideo.current.srcObject = stream;\n            userStream.current = stream;\n            userVideo.current.muted = true;\n\n            socket.current = io.connect(\"/\");\n            socket.current.emit(\"join room\", props.match.params.roomID);\n\n            socket.current.on('other user', userID => {\n                callUser(userID);\n                otherUser.current = userID;\n            });\n\n            socket.current.on(\"user joined\", userID => {\n                otherUser.current = userID;\n            });\n\n            socket.current.on(\"offer\", handleRecieveCall);\n\n            socket.current.on(\"answer\", handleAnswer);\n\n            socket.current.on(\"ice-candidate\", handleNewICECandidateMsg);\n\n            // added for message\n            // socket.on(\"createMessage\", message => {\n            //     (\"ul\").append(`<li className=\"message\">${message}</li>`)\n            // });\n            // message addition ends here\n        });\n\n    }, []);\n\n    function callUser(userID) {\n        peerRef.current = createPeer(userID);\n        userStream.current.getTracks().forEach(track => peerRef.current.addTrack(track, userStream.current));\n        // added for msg\n        sendChannel.current = peerRef.current.createDataChannel(\"sendChannel\");\n        sendChannel.current.onmessage = handleReceiveMessage;\n    }\n\n    // added for msg\n    function handleReceiveMessage(e) {\n        setMessage(message => [...message, { yours: false, value: e.data }]);\n    }\n\n\n\n    function createPeer(userID) {\n        const peer = new RTCPeerConnection({\n            // trickel: false,\n            iceServers: [\n                { urls: 'stun:stun.l.google.com:19302' },\n                { urls: 'stun:stun1.l.google.com:19302' },\n                { urls: 'stun:stun2.l.google.com:19302' },\n                { urls: 'stun:stun3.l.google.com:19302' },\n                { urls: 'stun:stun4.l.google.com:19302' },\n                // {\n                //     url: 'turn:192.158.29.39:3478?transport=udp',\n                //     credential: 'JZEOEt2V3Qb0y27GRntt2u2PAYA=',\n                //     username: '28224511:1379330808'\n                // },\n            ]\n        });\n\n        peer.onicecandidate = handleICECandidateEvent;\n        peer.ontrack = handleTrackEvent;\n        peer.onnegotiationneeded = () => handleNegotiationNeededEvent(userID);\n\n        return peer;\n    }\n\n    function handleNegotiationNeededEvent(userID) {\n        peerRef.current.createOffer().then(offer => {\n            return peerRef.current.setLocalDescription(offer);\n        }).then(() => {\n            const payload = {\n                target: userID,\n                caller: socket.current.id,\n                sdp: peerRef.current.localDescription\n            };\n            socket.current.emit(\"offer\", payload);\n        }).catch(e => console.log(e));\n    }\n\n    function handleICECandidateEvent(e) {\n        if (e.candidate) {\n            const payload = {\n                target: otherUser.current,\n                candidate: e.candidate,\n            }\n            socket.current.emit(\"ice-candidate\", payload);\n        }\n    }\n\n    function handleNewICECandidateMsg(incoming) {\n        const candidate = new RTCIceCandidate(incoming);\n\n        peerRef.current.addIceCandidate(candidate)\n            .catch(e => console.log(e));\n    }\n\n    function toggleChat() {\n        if (chatShow) {\n            setChatShow(false);\n        }\n        else {\n            setChatShow(true);\n        }\n    }\n\n    function handleRecieveCall(incoming) {\n        peerRef.current = createPeer();\n        // added for msg\n        peerRef.current.ondatachannel = (event) => {\n            sendChannel.current = event.channel;\n            sendChannel.current.onmessage = handleReceiveMessage;\n        };\n        // ends here\n        const desc = new RTCSessionDescription(incoming.sdp);\n        peerRef.current.setRemoteDescription(desc).then(() => {\n            userStream.current.getTracks().forEach(track => peerRef.current.addTrack(track, userStream.current));\n        }).then(() => {\n            return peerRef.current.createAnswer();\n        }).then(answer => {\n            return peerRef.current.setLocalDescription(answer);\n        }).then(() => {\n            const payload = {\n                target: incoming.caller,\n                caller: socket.current.id,\n                sdp: peerRef.current.localDescription\n            }\n            socket.current.emit(\"answer\", payload);\n        })\n    }\n\n    function handleAnswer(message) {\n        const desc = new RTCSessionDescription(message.sdp);\n        peerRef.current.setRemoteDescription(desc).catch(e => console.log(e));\n    }\n\n    function handleTrackEvent(e) {\n        partnerVideo.current.srcObject = e.streams[0];\n    };\n\n    // added for msg\n    function handleChange(e) {\n        setText(e.target.value);\n    }\n\n    // added for msg\n    function sendMessage(e) {\n        sendChannel.current.send(text);\n        setMessage(message => [...message, { yours: true, value: text }]);\n        setText(\"\");\n    }\n\n    // added for msg\n    function renderMessage(message, index) {\n        if (message.value != \"\") {\n            if (message.yours) {\n                window.scrollTo(0,5000);\n                return (\n                    <MyRow key={index}>\n                        <MyMessage>\n                            {message.value}\n                        </MyMessage>\n                    </MyRow>\n                )\n            }\n            else {\n                return (\n                    <PartnerRow key={index}>\n                        <PartnerMessage>\n                            {message.value}\n                        </PartnerMessage>\n                    </PartnerRow>\n                )\n            }\n        }\n    }\n\n    function copyUrl() {\n        copy(window.location.href);\n    }\n\n    let UserVideo;\n    if (stream) {\n        UserVideo = (\n            <div className=\"my-video\">\n                <Video playsInline muted ref={userVideo} autoPlay />\n            </div>\n        );\n    }\n\n    let PartnerVideo;\n    PartnerVideo = (\n        <div className=\"friend-video\"><Video playsInline ref={partnerVideo} autoPlay /></div>\n    );\n\n    function muteUnmute() {\n        if (isMuted) {\n            setMuted(false);\n            userVideo.current.srcObject.getAudioTracks().forEach((track) => (track.enabled = !track.enabled));\n        }\n        else {\n            setMuted(true);\n            userVideo.current.srcObject.getAudioTracks().forEach((track) => (track.enabled = !track.enabled));\n        }\n    }\n\n    function pauseVideo() {\n        if (!isPlaying && stream) {\n            setPlaying(true);\n            userVideo.current.srcObject.getVideoTracks().forEach((track) => (track.enabled = !track.enabled));\n            UserVideo = (\n                <div className=\"my-video\">\n                    <Video playsInline muted={isMuted} ref={userVideo} autoPlay />\n                </div>\n            );\n        }\n        else if (isPlaying && stream) {\n            setPlaying(false);\n            userVideo.current.srcObject.getVideoTracks().forEach((track) => (track.enabled = !track.enabled));\n            UserVideo = (\n                <div className=\"my-video\">\n                    <Video playsInline muted={isMuted} ref={userVideo} autoPlay />\n                </div>\n            );\n        }\n    }\n    // this works, don't touch it\n    function leaveCall() {\n        socket.current.destroy();\n        userStream.current.getVideoTracks()[0].enabled = false;\n        userStream.current.getAudioTracks()[0].enabled = false;\n        // userStream.current.destroy();\n        window.location.replace(\"/\");\n    }\n\n    return (\n        <div className=\"main\">\n            <div className={chatShow ? \"leftHide\" : \"leftVis\"}>\n                <Container>\n                    {UserVideo}\n                    {PartnerVideo}\n                </Container>\n                <footer className=\"footer page-footer footer-copyright font-small fixed-bottom text-center py-3 special-color pt-4\">\n                    <div className=\"call-action\">\n                        {/* {incomingCall} */}\n                        <button className=\"btn-circle\" onClick={copyUrl}><FontAwesomeIcon icon=\"clipboard\" /></button>\n                        <button onClick={muteUnmute} className={isMuted ? \"btn-mute\" : \"btn-unmute\"}>\n                            <FontAwesomeIcon icon={isMuted ? 'microphone-slash' : 'microphone'} />\n                        </button>\n                        <button className={isPlaying ? \"btn-video-on\" : \"btn-video-off\"} onClick={pauseVideo}>\n                            <FontAwesomeIcon icon={isPlaying ? 'eye' : 'eye-slash'} />\n                        </button>\n                        <button className=\"leave btn-circle\" onClick={leaveCall} >\n                            <FontAwesomeIcon icon=\"phone-slash\" />\n                        </button>\n                        <button onClick={toggleChat} className=\"btn-circle\"><FontAwesomeIcon icon=\"comment-alt\" /></button>\n                        {/* <button onClick={shareScreen}>share</button> */}\n                    </div>\n                </footer>\n            </div>\n            <div className={chatShow ? \"chatVis\" : \"chatHide\"}>\n                <div className=\"main__header\">\n                    <h6>In-call messages</h6>\n                </div>\n                <div className=\"chat-area\">\n                    <Message>\n                        {message.map(renderMessage)}\n                    </Message>\n                </div>\n                <div className=\"text-area\">\n                    <div><MessageBox className=\"textBox\" value={text} onChange={handleChange} placeholder=\"Enter msg here...\" />\n                    <button className=\"send\" onClick={sendMessage}><FontAwesomeIcon icon=\"paper-plane\" /></button></div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Room;","import React from 'react';\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport CreateRoom from \"./routes/CreateRoom\";\nimport Room from \"./routes/Room\";\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n        <Switch>\n          <Route path=\"/\" exact component={CreateRoom} />\n          <Route path=\"/room/:roomID\" component={Room} />\n        </Switch>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}